# Setup a python environment, install the packages for your project with pip as pkg-manager and
# run flake8 + pytest (this assumes flake8 and pytest are installed via the install-package step)

# A standard Docker workflow, where you are building an image with a Dockerfile in the root of
# your repository, naming the image to be the same name as your repository and pushing to the
# default docker registry (at docker.io).

# Use Git to push the changes of the current tag or branch to Heroku for deployment

version: 2.1

orbs:
  python: circleci/python@2.1.1
  docker: circleci/docker@2.2.0
  heroku: circleci/heroku@2.0

jobs:
  install-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run linter and tests
          command: |
            flake8
            pytest -s

  deploy-via-docker:
    executor: docker/machine
    environment:
      SECRET_KEY: $SECRET_KEY
      SENTRY_DSN: $SENTRY_DSN
    steps:
      - heroku/install
      - heroku/check-authentication
      - checkout
      - heroku/push-docker-image:
          app-name: oc-lettings-container
          process-types: web
      - heroku/release-docker-image:
          app-name: oc-lettings-container
          process-types: web

workflows:
  my-pipeline:
    jobs:
      - install-and-test
      - docker/publish:
          image: $DOCKER_LOGIN/oc-lettings-local
          dockerfile: Dockerfile_loc
          requires:
            - install-and-test
          filters:
            branches:
              only: team
      - heroku/deploy-via-git:
          app-name: oc-lettings-tnt78
          requires:
            - docker/publish
      - deploy-via-docker:
          requires:
            - docker/publish
